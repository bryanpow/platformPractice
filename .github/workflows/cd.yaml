name: Deploy to Minikube

on:
  push:
    branches:
      - main  # This will trigger the workflow on pushes to the `main` branch
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for the CI job

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for building images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-vite-app .

      # Step 4: Set up Minikube
      - name: Set up Minikube
        uses: manusa/actions-setup-minikube@v2
        with:
          minikube-version: 'latest'
          driver: 'docker'  # Use Docker driver for Minikube

      # Step 5: Set up kubectl (for interacting with the cluster)
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1

      # Step 6: Deploy to Minikube
      - name: Deploy to Minikube
        run: |
          eval $(minikube -p minikube docker-env)  # Ensure Docker is using Minikube's Docker environment
          kubectl apply -f k8s/vite-deployment.yaml  # Path to your Kubernetes deployment YAML
          kubectl apply -f k8s/vite-service.yaml  # Path to your Kubernetes service YAML
          kubectl set image deployment/vite-deployment vite=my-vite-app:${{ github.sha }}  # Update the deployment with the new image

